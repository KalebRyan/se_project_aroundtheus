!function(){"use strict";class e{constructor(e,t,s,r,n){let{name:i,link:o,isLiked:a,_id:l}=e;this._name=i,this._link=o,this.isLiked=a,this.id=l,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteClick=r,this._handleLikeClick=n}_setEventListeners(){this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteClick(this)})),this._likeButton.addEventListener("click",(()=>{this._handleLikeClick(this)}))}handleDeleteIcon(){this._cardElement.remove(),this._cardElement=null}handleLikeIcon(e){this.isLiked=e,this.renderLikes()}renderLikes(){this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}getCard(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this.renderLikes(),this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}_showInputError(e){this._errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageElement.textContent=e.validationMessage,this._errorMessageElement.classList.add(this._errorClass)}_hideInputError(e){this._errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageElement.textContent=" ",this._errorMessageElement.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this.toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._enableButton()}}class s{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}addItem(e){this._container.prepend(e)}renderItems(){this._items.reverse().forEach((e=>{this._renderer(e)}))}}class r{constructor(e){let{modalSelector:t}=e;this._modalElement=document.querySelector(t)}open(){this._modalElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._modalElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setLoading(e){this._saveButton.textContent=e?"Saving...":"Saved."}setEventListeners(){this._modalElement.addEventListener("mousedown",(e=>{e.target===e.currentTarget&&this.close()})),this._modalElement.querySelector(".modal__close-button").addEventListener("click",(()=>{this.close()}))}}class n extends r{constructor(e,t){let{modalSelector:s}=e;super({modalSelector:s}),this._handleFormSubmit=t,this._form=this._modalElement.querySelector(".modal__form"),this._saveButton=this._modalElement.querySelector(".modal__button")}_getInputValues(){return this._inputList=this._modalElement.querySelectorAll(".modal__input"),this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}close(){super.close(),this._form.reset()}}document.querySelector("#profile__edit-modal");const i=document.querySelector("#profile__edit-button"),o=document.forms["profile-form"],a=(document.querySelectorAll(".modal__close-button"),document.querySelector(".modal__input_type_name")),l=document.querySelector(".modal__input_type_description"),d=document.querySelector("#profile__avatar-edit-button"),c=document.querySelector(".cards__list"),h=document.querySelector("#card__template").content.firstElementChild,_=(document.querySelector("#card__add-modal"),document.querySelector("#profile__add-button")),m=document.forms["card-form"];h.querySelector(".card__delete-button");const u=new class{constructor(e){let{nameSelector:t,descriptionSelector:s,avatarSelector:r}=e;this._name=document.querySelector(t),this._description=document.querySelector(s),this._avatar=document.querySelector(r)}getUserInfo(){return{name:this._name.textContent,description:this._description.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._name.textContent=t,this._description.textContent=s}setUserAvatar(e){this._avatar.src=e}}({nameSelector:".profile__title",descriptionSelector:".profile__description",avatarSelector:".profile__avatar"}),p=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_handleResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._handleResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handleResponse)}setUserInfo(e){let{name:t,description:s}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then(this._handleResponse)}addCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._handleResponse)}removeCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._handleResponse)}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}updateAvatar(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._handleResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"24d24150-f342-4b21-ba37-43c96c87f158","Content-Type":"application/json"}});Promise.all([p.getUserInfo(),p.getInitialCards()]).then((t=>{let[r,n]=t;u.setUserInfo(r),u.setUserAvatar(r.avatar);const i=new s({items:n,renderer:t=>{const s=new e(t,"#card__template",E,k,L);i.addItem(s.getCard())}},".cards__list");i.renderItems()})).catch((e=>{console.error(e)}));const v=new class extends r{constructor(e){let{modalSelector:t}=e;super({modalSelector:t}),this._image=this._modalElement.querySelector(".modal__preview-image"),this._name=this._modalElement.querySelector(".modal__image-caption")}open(e){let{name:t,link:s}=e;this._image.src=s,this._image.alt=t,this._name.textContent=t,super.open()}}({modalSelector:"#preview__image-modal"});function E(e){v.open(e)}v.setEventListeners();const S=new n({modalSelector:"#profile__edit-modal"},(function(e){S.setLoading(!0),p.setUserInfo(e).then((e=>{u.setUserInfo(e)})).catch((e=>{console.error(e)})).finally((()=>{S.setLoading(!1)})),S.close()}));S.setEventListeners();const f=new n({modalSelector:"#card__add-modal"},(function(t){f.setLoading(!0),p.addCard(t).then((t=>{const s=new e(t,"#card__template",E,k,L);c.prepend(s.getCard())})).catch((e=>{console.error(e)})).finally((()=>{f.setLoading(!1)})),f.close()}));function L(e){e.isLiked?p.removeLike(e.id).then((t=>{e.handleLikeIcon(t.isLiked)})).catch((e=>{console.error(e)})):p.likeCard(e.id).then((t=>{e.handleLikeIcon(t.isLiked)})).catch((e=>{console.error(e)}))}f.setEventListeners();const b=new class extends r{constructor(e,t){let{modalSelector:s}=e;super({modalSelector:s}),this._handleFormSubmit=t,this._form=this._modalElement.querySelector(".modal__form")}setSubmitAction(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("click",(e=>{e.preventDefault(),this._handleFormSubmit(),this.close()}))}}({modalSelector:"#delete__card-modal"},k);function k(e){b.open(),b.setSubmitAction((()=>{p.removeCard(e.id).then((()=>{e.handleDeleteIcon(),b.close()})).catch((e=>{console.error(e)}))}))}b.setEventListeners();const y=new n({modalSelector:"#avatar__edit-modal"},(function(e){y.setLoading(!0),p.updateAvatar(e).then((e=>{u.setUserAvatar(e.avatar)})).catch((e=>{console.error(e)})).finally((()=>{y.setLoading(!1)})),y.close()}));y.setEventListeners(),i.addEventListener("click",(()=>{S.open(),function(){const e=u.getUserInfo();a.value=e.name,l.value=e.description}(),g[o.getAttribute("name")].resetValidation()})),_.addEventListener("click",(()=>{g[m.getAttribute("name")].resetValidation(),f.open()})),d.addEventListener("click",(()=>{y.open(),g[y._form.getAttribute("name")].resetValidation()}));const g={};var C;C={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(C.formSelector)).forEach((e=>{const s=new t(C,e),r=e.getAttribute("name");g[r]=s,s.enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
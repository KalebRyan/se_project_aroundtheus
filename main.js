!function(){"use strict";class e{constructor(e,t,s,r,i){let{name:n,link:o,isLiked:a,_id:l}=e;this._name=n,this._link=o,this.isLiked=a,this.id=l,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteClick=r,this._handleLikeClick=i}_setEventListeners(){this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteClick(this)})),this._likeButton.addEventListener("click",(()=>{this._handleLikeClick(this)}))}handleDeleteIcon(){this._cardElement.remove(),this._cardElement=null}handleLikeIcon(e){this.isLiked=e,this.renderLikes()}renderLikes(){this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}getCard(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this.renderLikes(),this._setEventListeners(),this._cardElement}}class t{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}addItem(e){this._container.prepend(e)}renderItems(){this._items.reverse().forEach((e=>{this._renderer(e)}))}}class s{constructor(e,t){this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}_showInputError(e){this._errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageElement.textContent=e.validationMessage,this._errorMessageElement.classList.add(this._errorClass)}_hideInputError(e){this._errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageElement.textContent=" ",this._errorMessageElement.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this.toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._enableButton()}}class r{constructor(e){let{modalSelector:t}=e;this._modalElement=document.querySelector(t)}open(){this._modalElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._modalElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._modalElement.addEventListener("mousedown",(e=>{e.target===e.currentTarget&&this.close()})),this._modalElement.querySelector(".modal__close-button").addEventListener("click",(()=>{this.close()}))}}class i extends r{constructor(e,t){let{modalSelector:s}=e;super({modalSelector:s}),this._handleFormSubmit=t,this._form=this._modalElement.querySelector(".modal__form"),this._saveButton=this._modalElement.querySelector(".modal__button"),this._buttonText=this._saveButton.textContent}_getInputValues(){return this._inputList=this._modalElement.querySelectorAll(".modal__input"),this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}getFormName(){return this._form.getAttribute("name")}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._saveButton.textContent=e?t:this._buttonText}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}close(){super.close(),this._form.reset()}}document.querySelector("#profile__edit-modal");const n=document.querySelector("#profile__edit-button"),o=(document.forms["profile-form"],document.querySelectorAll(".modal__close-button"),document.querySelector(".modal__input_type_name")),a=document.querySelector(".modal__input_type_description"),l=document.querySelector("#profile__avatar-edit-button"),d=document.querySelector("#card__template").content.firstElementChild,c=(document.querySelector("#card__add-modal"),document.querySelector("#profile__add-button")),_=(document.forms["card-form"],d.querySelector(".card__delete-button"),new class{constructor(e){let{nameSelector:t,descriptionSelector:s,avatarSelector:r}=e;this._name=document.querySelector(t),this._description=document.querySelector(s),this._avatar=document.querySelector(r)}getUserInfo(){return{name:this._name.textContent,description:this._description.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._name.textContent=t,this._description.textContent=s}setUserAvatar(e){this._avatar.src=e}}({nameSelector:".profile__title",descriptionSelector:".profile__description",avatarSelector:".profile__avatar"})),h=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_handleResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(e,t).then(this._handleResponse)}getUserInfo(){return this._request(`${this._baseUrl}/users/me`,{headers:this._headers})}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{headers:this._headers})}setUserInfo(e){let{name:t,description:s}=e;return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})})}addCard(e){let{name:t,link:s}=e;return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})})}removeCard(e){return this._request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}likeCard(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers})}removeLike(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers})}updateAvatar(e){let{avatar:t}=e;return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"24d24150-f342-4b21-ba37-43c96c87f158","Content-Type":"application/json"}});function u(t){return new e(t,"#card__template",E,k,b).getCard()}let m;function p(e,t,s){t.renderLoading(!0,s),e().then((()=>{t.close()})).catch(console.error).finally((()=>{t.renderLoading(!1)}))}Promise.all([h.getUserInfo(),h.getInitialCards()]).then((e=>{let[s,r]=e;_.setUserInfo(s),_.setUserAvatar(s.avatar),m=new t({items:r,renderer:e=>{const t=u(e);m.addItem(t)}},".cards__list"),m.renderItems()})).catch(console.error);const v=new class extends r{constructor(e){let{modalSelector:t}=e;super({modalSelector:t}),this._image=this._modalElement.querySelector(".modal__preview-image"),this._name=this._modalElement.querySelector(".modal__image-caption")}open(e){let{name:t,link:s}=e;this._image.src=s,this._image.alt=t,this._name.textContent=t,super.open()}}({modalSelector:"#preview__image-modal"});function E(e){v.open(e)}v.setEventListeners();const S=new i({modalSelector:"#profile__edit-modal"},(function(e){p((function(){return h.setUserInfo(e).then((e=>{_.setUserInfo(e)}))}),S)}));S.setEventListeners();const f=new i({modalSelector:"#card__add-modal"},(function(e){p((function(){return h.addCard(e).then((e=>{const t=u(e);m.addItem(t)}))}),f)}));function b(e){e.isLiked?h.removeLike(e.id).then((t=>{e.handleLikeIcon(t.isLiked)})).catch((e=>{console.error(e)})):h.likeCard(e.id).then((t=>{e.handleLikeIcon(t.isLiked)})).catch(console.error)}f.setEventListeners();const L=new class extends r{constructor(e,t){let{modalSelector:s}=e;super({modalSelector:s}),this._handleFormSubmit=t,this._form=this._modalElement.querySelector(".modal__form")}setSubmitAction(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}}({modalSelector:"#delete__card-modal"},k);function k(e){L.open(),L.setSubmitAction((()=>{h.removeCard(e.id).then((()=>{e.handleDeleteIcon(),L.close()})).catch(console.error)}))}L.setEventListeners();const y=new i({modalSelector:"#avatar__edit-modal"},(function(e){p((function(){return h.updateAvatar(e).then((e=>{_.setUserAvatar(e.avatar),y.close()}))}),y)}));y.setEventListeners(),n.addEventListener("click",(()=>{S.open(),function(){const e=_.getUserInfo();o.value=e.name,a.value=e.description}(),g[S.getFormName()].resetValidation()})),c.addEventListener("click",(()=>{f.open(),g[f.getFormName()].resetValidation()})),l.addEventListener("click",(()=>{y.open(),g[y.getFormName()].resetValidation()}));const g={};var C;C={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(C.formSelector)).forEach((e=>{const t=new s(C,e),r=e.getAttribute("name");g[r]=t,t.enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,